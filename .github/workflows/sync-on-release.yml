name: Sync n8n Upstream Release

on:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout your repo
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Configure git and add upstream remote
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote add upstream https://github.com/n8n-io/n8n.git
          git fetch upstream --tags

      - name: Cache last synced release tag
        id: cache
        uses: actions/cache@v4
        with:
          path: .last_synced_release
          key: last-synced-release

      - name: Get latest release tag from upstream
        id: get_release
        run: |
          latest_tag=$(curl -s https://api.github.com/repos/n8n-io/n8n/releases/latest | jq -r '.tag_name')
          echo "$latest_tag" > latest_release.txt
          echo "tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Determine if new release
        id: check_release
        run: |
          if [ -f .last_synced_release ]; then
            if ! cmp -s .last_synced_release latest_release.txt; then
              echo "new_release=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "new_release=true" >> $GITHUB_OUTPUT
          fi

      - name: Pull release tag from upstream and merge
        if: steps.check_release.outputs.new_release == 'true'
        run: |
          tag=${{ steps.get_release.outputs.tag }}
          git checkout -b $tag
          git reset --hard upstream/${tag}
          git push origin ${tag} --force
          echo "$tag" > .last_synced_release

      - name: Commit and push updates
        if: steps.check_release.outputs.new_release == 'true'
        run: |
          git add .last_synced_release
          git commit -m "Sync with upstream release ${{ steps.get_release.outputs.tag }}" || echo "No changes"
          git push origin master

      - name: Create new release
        if: steps.check_release.outputs.new_release == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag=${{ steps.get_release.outputs.tag }}
          gh release create "$tag" --title "$tag" --notes "Synced with upstream release $tag"
